[{"path":"https://nicebread.github.io/RESQUER/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 RESQUER authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://nicebread.github.io/RESQUER/articles/RESQUE_profile.html","id":"submitted-research-outputs","dir":"Articles","previous_headings":"","what":"Submitted research outputs","title":"Exemplary RESQUE Profile","text":"10 research outputs submitted. following table shows types submitted outputs, whether flagged suitable rating sheet (yes) (). 10 publications following types: following methodological type:","code":""},{"path":"https://nicebread.github.io/RESQUER/articles/RESQUE_profile.html","id":"team-science-in-publications","dir":"Articles","previous_headings":"Submitted research outputs","what":"Team science in publications?","title":"Exemplary RESQUE Profile","text":"10 10 submitted publications automatically retrieved openAlex.","code":""},{"path":"https://nicebread.github.io/RESQUER/articles/RESQUE_profile.html","id":"contributorship-profile-credit-roles","dir":"Articles","previous_headings":"","what":"Contributorship profile (CRediT roles)","title":"Exemplary RESQUE Profile","text":"Based 10 submitted publications, self-reported contributorship profile:   categorized papers levels involvement, based degrees contributorship:","code":""},{"path":"https://nicebread.github.io/RESQUER/articles/RESQUE_profile.html","id":"research-impact-highly-popular-publications","dir":"Articles","previous_headings":"","what":"Research impact: Highly popular publications","title":"Exemplary RESQUE Profile","text":"BIP! Scholar (non-commercial open-source service facilitate fair researcher assessment) provides impact scores publications. provides five impact classes based norm values: Top 0.01% Top 0.1% Top 1% Top 10% Average (Bottom 90%) , consider Popularity measure. indicator reflects impact/attention article research community large. based AttRank, variation PageRank (known Google search algorithm) accounts temporal evolution citation network. , alleviates bias younger publications, chance accumulate lot citations. models researcher’s preference read papers received lot attention recently. evaluated (vetted) performance predict ranking papers concerning future impact (.e., citations). details, see BIP! glossary references therein. 10 submitted papers Felix Schönbrodt, 9 top 10% popularity class papers better. highly popular papers :","code":""},{"path":"https://nicebread.github.io/RESQUER/articles/RESQUE_profile.html","id":"rigor-profile-overview","dir":"Articles","previous_headings":"","what":"Rigor profile overview","title":"Exemplary RESQUE Profile","text":"relative rigor score (RRS) computed “percentage maximal points” (POMP) score multiple indicators. indicators grouped five categories: Open Data, Preregistration, Reproducible Code & Verification, Theorizing, Open Materials. Indicators flagged “applicable” removed maximum points therefore lower RRS. grey circles norm values based sample 63 papers mostly early mid-career researchers submitted three best papers, indicating 50%, 90%, 99% quantile relative rigor score.  Note: rigor category Theorizing, applicant indicated category apply submitted publication.","code":""},{"path":"https://nicebread.github.io/RESQUER/articles/RESQUE_profile.html","id":"open-data-in-publications","dir":"Articles","previous_headings":"","what":"Open Data in Publications","title":"Exemplary RESQUE Profile","text":"9 suitable publications, 9 empirical data. represent base following analyses. TBD","code":""},{"path":[]},{"path":"https://nicebread.github.io/RESQUER/articles/RESQUE_profile.html","id":"correctness-of-computational-results-has-been-independently-verified","dir":"Articles","previous_headings":"Reproducibility","what":"Correctness of computational results has been independently verified","title":"Exemplary RESQUE Profile","text":"4 papers empirical data. analysis independently verified computational correctness:","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":"https://nicebread.github.io/RESQUER/articles/RESQUE_profile.html","id":"what-has-been-preregistered","dir":"Articles","previous_headings":"Preregistration","what":"What has been preregistered?","title":"Exemplary RESQUE Profile","text":"2 9 eligible publications preregistrations. following components preregistered (relative 2 preregistrations):","code":""},{"path":"https://nicebread.github.io/RESQUER/articles/RESQUE_profile.html","id":"not-applicable-justifications","dir":"Articles","previous_headings":"","what":"“Not applicable” justifications","title":"Exemplary RESQUE Profile","text":"Choosing “applicable” indicates indicator principally attained research output. avoid bias certain research fields, points non-applicable indicators removed maximum points therefore lower computed relative rigor score. However, order prevent gaming scheme, “applicable” claim needs justified. justification accepted committee, point removed. insufficent justification, contrast, indicator set “available” (=0 points) maximum points adjusted. claims non-applicability applicant:","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://nicebread.github.io/RESQUER/articles/Radarchart_interpretation.html","id":"rarely-do-it---but-when-we-do-it-we-do-it-the-right-way-","dir":"Articles","previous_headings":"","what":"“Rarely do it - but when we do it, we do it the right way.”","title":"How to read the radarcharts of the relative rigor score (RRS)","text":"candidate nearly chance gain open data points, can seen narrow sector. example, submitted many methodological/purely theoretical papers data, convincing justifications data strictly openly released. cases provide open data, perfect way (.e., according FAIR criteria indicators related open data): narrow sector 100% points.","code":""},{"path":"https://nicebread.github.io/RESQUER/articles/Radarchart_interpretation.html","id":"a-lot-of-missed-chances-you-could-have-been-better-","dir":"Articles","previous_headings":"","what":"“A lot of missed chances: You could have been better.”","title":"How to read the radarcharts of the relative rigor score (RRS)","text":"profile, lot open data points gained: Open Data sector broad. potential points actually gained.","code":""},{"path":"https://nicebread.github.io/RESQUER/articles/Radarchart_interpretation.html","id":"demonstrating-expertise-a-lot-of-potential-that-has-been-realized","dir":"Articles","previous_headings":"","what":"“Demonstrating expertise: A lot of potential that has been realized”","title":"How to read the radarcharts of the relative rigor score (RRS)","text":"candidate many opportunities providing open data (sector broad), excellent way. true expertise: lot experience proper way.","code":""},{"path":"https://nicebread.github.io/RESQUER/articles/Radarchart_interpretation.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"How to read the radarcharts of the relative rigor score (RRS)","text":"chart shows quantity points gained, quality practice. looking candidate lot experience certain skill good way, respective sector broad filled.","code":""},{"path":"https://nicebread.github.io/RESQUER/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"First Last. Author, maintainer.","code":""},{"path":"https://nicebread.github.io/RESQUER/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Last F (2024). RESQUER: Package (One Line, Title Case). R package version 0.0.0.9000, https://nicebread.github.io/RESQUER/.","code":"@Manual{,   title = {RESQUER: What the Package Does (One Line, Title Case)},   author = {First Last},   year = {2024},   note = {R package version 0.0.0.9000},   url = {https://nicebread.github.io/RESQUER/}, }"},{"path":"https://nicebread.github.io/RESQUER/index.html","id":"resquer","dir":"","previous_headings":"","what":"What the Package Does (One Line, Title Case)","title":"What the Package Does (One Line, Title Case)","text":"R package analyzing RESQUE Research Quality Evaluation schemes.","code":""},{"path":"https://nicebread.github.io/RESQUER/index.html","id":"how-to-preview-the-dashboard","dir":"","previous_headings":"","what":"How to preview the dashboard:","title":"What the Package Does (One Line, Title Case)","text":"Install development versions GitHub : Launch dashboard three included demo profiles:","code":"install.packages(\"remotes\") remotes::install_github(\"nicebread/OAmetrics\") remotes::install_github(\"nicebread/RESQUER\") library(quarto) quarto_serve(system.file(\"dashboard/dashboard_shiny.qmd\", package=\"RESQUER\"))"},{"path":"https://nicebread.github.io/RESQUER/reference/BC_h.html","id":null,"dir":"Reference","previous_headings":"","what":"BC_h — BC_h","title":"BC_h — BC_h","text":"function creates horizontal stacked bar chart plotly bar labels displaying category labels, values, percentages.","code":""},{"path":"https://nicebread.github.io/RESQUER/reference/BC_h.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BC_h — BC_h","text":"","code":"BC_h(cat_labels, values, colors, title = \"\", rev = FALSE)"},{"path":"https://nicebread.github.io/RESQUER/reference/BC_h.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"BC_h — BC_h","text":"cat_labels character vector category labels bars. values numeric vector values category. colors character vector colors category. title title plot. rev order categories reversed?","code":""},{"path":"https://nicebread.github.io/RESQUER/reference/BC_h.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"BC_h — BC_h","text":"plotly object stacked bar chart.","code":""},{"path":"https://nicebread.github.io/RESQUER/reference/BC_h.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"BC_h — BC_h","text":"","code":"BC_h(   cat_labels=c(\"Yes\", \"No\", \"not applicable\"),   values=c(10, 2, 4),   colors=c(\"#90c916\", \"#FED976\", \"#eeeeee\"),   title=\"The publication contained a preregistered replication attempt\")  {\"x\":{\"visdat\":{\"185c2c184cdc\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"185c2c184cdc\",\"attrs\":{\"185c2c184cdc\":{\"x\":{},\"y\":{},\"orientation\":\"h\",\"marker\":{\"color\":\"#90c916\",\"line\":{\"color\":\"rgb(248, 248, 249)\",\"width\":1}},\"name\":\"Yes\",\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"bar\"},\"185c2c184cdc.1\":{\"x\":{},\"y\":{},\"orientation\":\"h\",\"marker\":{\"color\":\"#FED976\",\"line\":{\"color\":\"rgb(248, 248, 249)\",\"width\":1}},\"name\":\"No\",\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"bar\",\"inherit\":true},\"185c2c184cdc.2\":{\"x\":{},\"y\":{},\"orientation\":\"h\",\"marker\":{\"color\":\"#eeeeee\",\"line\":{\"color\":\"rgb(248, 248, 249)\",\"width\":1}},\"name\":\"not applicable\",\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"bar\",\"inherit\":true}},\"layout\":{\"width\":300,\"height\":200,\"margin\":{\"b\":40,\"l\":0,\"t\":25,\"r\":10},\"title\":{\"text\":\"The publication contained a preregistered replication attempt\",\"x\":0.050000000000000003,\"y\":0.94999999999999996,\"xanchor\":\"left\",\"yanchor\":\"top\",\"font\":{\"size\":14}},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"\",\"showgrid\":false,\"showline\":false,\"showticklabels\":false,\"zeroline\":false,\"autorange\":false,\"range\":[0,16]},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"\",\"showgrid\":false,\"showline\":false,\"showticklabels\":false,\"zeroline\":false},\"barmode\":\"stack\",\"showlegend\":false,\"annotations\":[{\"text\":\"Yes<br>(n=10)<br>62%\",\"x\":5,\"y\":1,\"font\":{\"family\":\"Arial\",\"size\":12,\"color\":\"#000000\"},\"showarrow\":false},{\"text\":\"Yes<br>(n=10)<br>62%\",\"x\":5,\"y\":1,\"font\":{\"family\":\"Arial\",\"size\":12,\"color\":\"#000000\"},\"showarrow\":false},{\"text\":\"Yes<br>(n=10)<br>62%\",\"x\":5,\"y\":1,\"font\":{\"family\":\"Arial\",\"size\":12,\"color\":\"#000000\"},\"showarrow\":false},{\"text\":\"No<br>(n=2)<br>12%\",\"x\":11,\"y\":1,\"font\":{\"family\":\"Arial\",\"size\":12,\"color\":\"#000000\"},\"showarrow\":false},{\"text\":\"No<br>(n=2)<br>12%\",\"x\":11,\"y\":1,\"font\":{\"family\":\"Arial\",\"size\":12,\"color\":\"#000000\"},\"showarrow\":false},{\"text\":\"No<br>(n=2)<br>12%\",\"x\":11,\"y\":1,\"font\":{\"family\":\"Arial\",\"size\":12,\"color\":\"#000000\"},\"showarrow\":false},{\"text\":\"not applicable<br>(n=4)<br>25%\",\"x\":14,\"y\":1,\"font\":{\"family\":\"Arial\",\"size\":12,\"color\":\"#000000\"},\"showarrow\":false},{\"text\":\"not applicable<br>(n=4)<br>25%\",\"x\":14,\"y\":1,\"font\":{\"family\":\"Arial\",\"size\":12,\"color\":\"#000000\"},\"showarrow\":false},{\"text\":\"not applicable<br>(n=4)<br>25%\",\"x\":14,\"y\":1,\"font\":{\"family\":\"Arial\",\"size\":12,\"color\":\"#000000\"},\"showarrow\":false}],\"hovermode\":\"closest\"},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"x\":[10],\"y\":[1],\"orientation\":\"h\",\"marker\":{\"color\":\"#90c916\",\"line\":{\"color\":\"rgb(248, 248, 249)\",\"width\":1}},\"name\":\"Yes\",\"type\":\"bar\",\"error_y\":{\"color\":\"rgba(31,119,180,1)\"},\"error_x\":{\"color\":\"rgba(31,119,180,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2],\"y\":[1],\"orientation\":\"h\",\"marker\":{\"color\":\"#FED976\",\"line\":{\"color\":\"rgb(248, 248, 249)\",\"width\":1}},\"name\":\"No\",\"type\":\"bar\",\"error_y\":{\"color\":\"rgba(255,127,14,1)\"},\"error_x\":{\"color\":\"rgba(255,127,14,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[4],\"y\":[1],\"orientation\":\"h\",\"marker\":{\"color\":\"#eeeeee\",\"line\":{\"color\":\"rgb(248, 248, 249)\",\"width\":1}},\"name\":\"not applicable\",\"type\":\"bar\",\"error_y\":{\"color\":\"rgba(44,160,44,1)\"},\"error_x\":{\"color\":\"rgba(44,160,44,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]} BC_h(   cat_labels=c(\"Yes\", \"No\"),   values=c(10, 2),   colors=c(\"#90c916\", \"#FED976\"))  {\"x\":{\"visdat\":{\"185c744068c8\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"185c744068c8\",\"attrs\":{\"185c744068c8\":{\"x\":{},\"y\":{},\"orientation\":\"h\",\"marker\":{\"color\":\"#90c916\",\"line\":{\"color\":\"rgb(248, 248, 249)\",\"width\":1}},\"name\":\"Yes\",\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"bar\"},\"185c744068c8.1\":{\"x\":{},\"y\":{},\"orientation\":\"h\",\"marker\":{\"color\":\"#FED976\",\"line\":{\"color\":\"rgb(248, 248, 249)\",\"width\":1}},\"name\":\"No\",\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"bar\",\"inherit\":true}},\"layout\":{\"width\":300,\"height\":200,\"margin\":{\"b\":40,\"l\":0,\"t\":25,\"r\":10},\"title\":{\"text\":\"\",\"x\":0.050000000000000003,\"y\":0.94999999999999996,\"xanchor\":\"left\",\"yanchor\":\"top\",\"font\":{\"size\":14}},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"\",\"showgrid\":false,\"showline\":false,\"showticklabels\":false,\"zeroline\":false,\"autorange\":false,\"range\":[0,12]},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"\",\"showgrid\":false,\"showline\":false,\"showticklabels\":false,\"zeroline\":false},\"barmode\":\"stack\",\"showlegend\":false,\"annotations\":[{\"text\":\"Yes<br>(n=10)<br>83%\",\"x\":5,\"y\":1,\"font\":{\"family\":\"Arial\",\"size\":12,\"color\":\"#000000\"},\"showarrow\":false},{\"text\":\"Yes<br>(n=10)<br>83%\",\"x\":5,\"y\":1,\"font\":{\"family\":\"Arial\",\"size\":12,\"color\":\"#000000\"},\"showarrow\":false},{\"text\":\"Yes<br>(n=10)<br>83%\",\"x\":5,\"y\":1,\"font\":{\"family\":\"Arial\",\"size\":12,\"color\":\"#000000\"},\"showarrow\":false},{\"text\":\"No<br>(n=2)<br>17%\",\"x\":11,\"y\":1,\"font\":{\"family\":\"Arial\",\"size\":12,\"color\":\"#000000\"},\"showarrow\":false},{\"text\":\"No<br>(n=2)<br>17%\",\"x\":11,\"y\":1,\"font\":{\"family\":\"Arial\",\"size\":12,\"color\":\"#000000\"},\"showarrow\":false},{\"text\":\"No<br>(n=2)<br>17%\",\"x\":11,\"y\":1,\"font\":{\"family\":\"Arial\",\"size\":12,\"color\":\"#000000\"},\"showarrow\":false}],\"hovermode\":\"closest\"},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"x\":[10],\"y\":[1],\"orientation\":\"h\",\"marker\":{\"color\":\"#90c916\",\"line\":{\"color\":\"rgb(248, 248, 249)\",\"width\":1}},\"name\":\"Yes\",\"type\":\"bar\",\"error_y\":{\"color\":\"rgba(31,119,180,1)\"},\"error_x\":{\"color\":\"rgba(31,119,180,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2],\"y\":[1],\"orientation\":\"h\",\"marker\":{\"color\":\"#FED976\",\"line\":{\"color\":\"rgb(248, 248, 249)\",\"width\":1}},\"name\":\"No\",\"type\":\"bar\",\"error_y\":{\"color\":\"rgba(255,127,14,1)\"},\"error_x\":{\"color\":\"rgba(255,127,14,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]} BC_h(cat_labels=c(\"Yes\"), values=c(10), colors=c(\"#90c916\"))  {\"x\":{\"visdat\":{\"185c43717507\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"185c43717507\",\"attrs\":{\"185c43717507\":{\"x\":{},\"y\":{},\"orientation\":\"h\",\"marker\":{\"color\":\"#90c916\",\"line\":{\"color\":\"rgb(248, 248, 249)\",\"width\":1}},\"name\":\"Yes\",\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"bar\"}},\"layout\":{\"width\":300,\"height\":200,\"margin\":{\"b\":40,\"l\":0,\"t\":25,\"r\":10},\"title\":{\"text\":\"\",\"x\":0.050000000000000003,\"y\":0.94999999999999996,\"xanchor\":\"left\",\"yanchor\":\"top\",\"font\":{\"size\":14}},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"\",\"showgrid\":false,\"showline\":false,\"showticklabels\":false,\"zeroline\":false,\"autorange\":false,\"range\":[0,10]},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"\",\"showgrid\":false,\"showline\":false,\"showticklabels\":false,\"zeroline\":false},\"barmode\":\"stack\",\"showlegend\":false,\"annotations\":[{\"text\":\"Yes<br>(n=10)<br>100%\",\"x\":5,\"y\":1,\"font\":{\"family\":\"Arial\",\"size\":12,\"color\":\"#000000\"},\"showarrow\":false},{\"text\":\"Yes<br>(n=10)<br>100%\",\"x\":5,\"y\":1,\"font\":{\"family\":\"Arial\",\"size\":12,\"color\":\"#000000\"},\"showarrow\":false},{\"text\":\"Yes<br>(n=10)<br>100%\",\"x\":5,\"y\":1,\"font\":{\"family\":\"Arial\",\"size\":12,\"color\":\"#000000\"},\"showarrow\":false}],\"hovermode\":\"closest\"},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"x\":[10],\"y\":[1],\"orientation\":\"h\",\"marker\":{\"color\":\"#90c916\",\"line\":{\"color\":\"rgb(248, 248, 249)\",\"width\":1}},\"name\":\"Yes\",\"type\":\"bar\",\"error_y\":{\"color\":\"rgba(31,119,180,1)\"},\"error_x\":{\"color\":\"rgba(31,119,180,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}"},{"path":"https://nicebread.github.io/RESQUER/reference/RRS_radarchart.html","id":null,"dir":"Reference","previous_headings":"","what":"Radar Chart for Relative Rigor Score — RRS_radarchart","title":"Radar Chart for Relative Rigor Score — RRS_radarchart","text":"function generates radar chart visualizes rigor profile given applicant's data.","code":""},{"path":"https://nicebread.github.io/RESQUER/reference/RRS_radarchart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Radar Chart for Relative Rigor Score — RRS_radarchart","text":"","code":"RRS_radarchart(   RRS,   title = \"\",   overall_score = FALSE,   minimal = FALSE,   show.legend = TRUE,   show.n_pub = TRUE,   base_size = 14 )"},{"path":"https://nicebread.github.io/RESQUER/reference/RRS_radarchart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Radar Chart for Relative Rigor Score — RRS_radarchart","text":"RRS output compute_RRS function. title main title plot. overall_score Show overall score plot? minimal TRUE, simple chart without legends drawn show.legend Show legend right? show.n_pub Show number publication chart based? base_size Base font size","code":""},{"path":"https://nicebread.github.io/RESQUER/reference/RRS_radarchart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Radar Chart for Relative Rigor Score — RRS_radarchart","text":"radar chart visualizing rigor profile applicant, showing distribution scores across different dimensions.","code":""},{"path":"https://nicebread.github.io/RESQUER/reference/RRS_radarchart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Radar Chart for Relative Rigor Score — RRS_radarchart","text":"","code":"radar_dat <- data.frame(   dimension = c(\"Open Data\", \"Open Materials\", \"Preregistration\",     \"Reproducible Code \\n& Verification\", \"Theorizing \\n& Formal Modeling\"),   max_points = rep(10, 5),   rel_score=c(0.5, 0.3, 0.1, 0.6, 0.2),   xstart = 0:4,   xend = 1:5,   xmid=0:4 + 0.5 ) RRS <- list(radar_dat=radar_dat, overall_score=0.5, n_papers=4) RRS_radarchart(RRS)"},{"path":"https://nicebread.github.io/RESQUER/reference/compute_RRS.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Relative Rigor Score (RRS) — compute_RRS","title":"Compute Relative Rigor Score (RRS) — compute_RRS","text":"function computes relative rigor score based indicators provided applicant.","code":""},{"path":"https://nicebread.github.io/RESQUER/reference/compute_RRS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Relative Rigor Score (RRS) — compute_RRS","text":"","code":"compute_RRS(applicant, sectors = c(\"weighted\", \"equal\"))"},{"path":"https://nicebread.github.io/RESQUER/reference/compute_RRS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Relative Rigor Score (RRS) — compute_RRS","text":"applicant applicant data preprocessed read_RESQUE function. sectors sectors equally sized (\"equal\") weighted maximum sum attainable points category (\"weighted\")?","code":""},{"path":"https://nicebread.github.io/RESQUER/reference/compute_RRS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Relative Rigor Score (RRS) — compute_RRS","text":"tibble containing dimension (category), maximum points, relative score category, suitable creating radar chart.","code":""},{"path":"https://nicebread.github.io/RESQUER/reference/format_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Format Author Names of a single OpenAlex work object — format_names","title":"Format Author Names of a single OpenAlex work object — format_names","text":"Formats names authors data frame.","code":""},{"path":"https://nicebread.github.io/RESQUER/reference/format_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format Author Names of a single OpenAlex work object — format_names","text":"","code":"format_names(works, alphabetical = TRUE)"},{"path":"https://nicebread.github.io/RESQUER/reference/format_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format Author Names of a single OpenAlex work object — format_names","text":"works data frame containing author information. alphabetical Logical indicating whether sort names alphabetically last name (default: TRUE).","code":""},{"path":"https://nicebread.github.io/RESQUER/reference/format_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format Author Names of a single OpenAlex work object — format_names","text":"character vector formatted names.","code":""},{"path":"https://nicebread.github.io/RESQUER/reference/get_indicators.html","id":null,"dir":"Reference","previous_headings":"","what":"Collate the indicator list into a data.frame — get_indicators","title":"Collate the indicator list into a data.frame — get_indicators","text":"Collate indicator list data.frame","code":""},{"path":"https://nicebread.github.io/RESQUER/reference/get_indicators.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collate the indicator list into a data.frame — get_indicators","text":"","code":"get_indicators(sc, pattern = \".*\")"},{"path":"https://nicebread.github.io/RESQUER/reference/get_indicators.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collate the indicator list into a data.frame — get_indicators","text":"sc Scores object (provided read_RESQUE) pattern regexp pattern filters results. default selects indicators","code":""},{"path":"https://nicebread.github.io/RESQUER/reference/get_json_object.html","id":null,"dir":"Reference","previous_headings":"","what":"Get JSON Object — get_json_object","title":"Get JSON Object — get_json_object","text":"Make GET request specified URL convert JSON response R object using jsonlite package.","code":""},{"path":"https://nicebread.github.io/RESQUER/reference/get_json_object.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get JSON Object — get_json_object","text":"","code":"get_json_object(url)"},{"path":"https://nicebread.github.io/RESQUER/reference/get_json_object.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get JSON Object — get_json_object","text":"url URL make GET request .","code":""},{"path":"https://nicebread.github.io/RESQUER/reference/get_json_object.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get JSON Object — get_json_object","text":"R object representing converted JSON response.","code":""},{"path":"https://nicebread.github.io/RESQUER/reference/get_reference_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert OpenAlex works into formatted reference list (in HTML) — get_reference_list","title":"Convert OpenAlex works into formatted reference list (in HTML) — get_reference_list","text":"function generates reference list given set OpenAlex works. formatting inspired APA style, (default) omit journal name can re-order authors alphabetically","code":""},{"path":"https://nicebread.github.io/RESQUER/reference/get_reference_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert OpenAlex works into formatted reference list (in HTML) — get_reference_list","text":"","code":"get_reference_list(   works,   alphabetical = TRUE,   journal_name = FALSE,   bullet = TRUE )"},{"path":"https://nicebread.github.io/RESQUER/reference/get_reference_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert OpenAlex works into formatted reference list (in HTML) — get_reference_list","text":"works data frame containing information works referenced. row data frame represents single work, columns represent different attributes works. alphabetical Logical value indicating whether references sorted alphabetically author's last name. Default TRUE. journal_name Logical value indicating whether journal name displayed. Default FALSE. bullet Logical value indicating whether references formatted unordered list (","code":""},{"path":"https://nicebread.github.io/RESQUER/reference/get_reference_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert OpenAlex works into formatted reference list (in HTML) — get_reference_list","text":"character vector containing formatted APA references.","code":""},{"path":"https://nicebread.github.io/RESQUER/reference/preprocess.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess and enrich the raw information from an applicant's JSON — preprocess","title":"Preprocess and enrich the raw information from an applicant's JSON — preprocess","text":"function preprocesses applicant data enriches additional data. Needs internet connection query BIP! API.","code":""},{"path":"https://nicebread.github.io/RESQUER/reference/preprocess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess and enrich the raw information from an applicant's JSON — preprocess","text":"","code":"preprocess(applicant)"},{"path":"https://nicebread.github.io/RESQUER/reference/preprocess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess and enrich the raw information from an applicant's JSON — preprocess","text":"applicant applicant data preprocessed (loaded read_RESQUE function).","code":""},{"path":"https://nicebread.github.io/RESQUER/reference/preprocess.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocess and enrich the raw information from an applicant's JSON — preprocess","text":"Preprocessed applicant data.","code":""},{"path":"https://nicebread.github.io/RESQUER/reference/read_RESQUE.html","id":null,"dir":"Reference","previous_headings":"","what":"Read and preprocess a single RESQUE JSON file — read_RESQUE","title":"Read and preprocess a single RESQUE JSON file — read_RESQUE","text":"Read preprocess single RESQUE JSON file","code":""},{"path":"https://nicebread.github.io/RESQUER/reference/read_RESQUE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read and preprocess a single RESQUE JSON file — read_RESQUE","text":"","code":"read_RESQUE(file)"},{"path":"https://nicebread.github.io/RESQUER/reference/read_RESQUE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read and preprocess a single RESQUE JSON file — read_RESQUE","text":"file Path RESQUE JSON file","code":""},{"path":"https://nicebread.github.io/RESQUER/reference/score.html","id":null,"dir":"Reference","previous_headings":"","what":"Score a single research output — score","title":"Score a single research output — score","text":"Returns list following elements: max_score: maximum score can reached score: score reached relative_score: score reached divided maximum score","code":""},{"path":"https://nicebread.github.io/RESQUER/reference/score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Score a single research output — score","text":"","code":"score(research_output, verbose = FALSE)"},{"path":"https://nicebread.github.io/RESQUER/reference/score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Score a single research output — score","text":"research_output research output scored verbose logical value indicating whether print verbose output (default FALSE)","code":""},{"path":"https://nicebread.github.io/RESQUER/reference/score.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Score a single research output — score","text":"list scoring information","code":""},{"path":"https://nicebread.github.io/RESQUER/reference/score_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Score multiple research outputs — score_all","title":"Score multiple research outputs — score_all","text":"Returns list following elements: scores: list scores research output scored_research_outputs: number research outputs scored overall_score: average score scored research outputs","code":""},{"path":"https://nicebread.github.io/RESQUER/reference/score_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Score multiple research outputs — score_all","text":"","code":"score_all(research_outputs, verbose = FALSE)"},{"path":"https://nicebread.github.io/RESQUER/reference/score_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Score multiple research outputs — score_all","text":"research_outputs list research outputs scored verbose logical value indicating verbose output printed","code":""},{"path":"https://nicebread.github.io/RESQUER/reference/score_all.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Score multiple research outputs — score_all","text":"list scores, number scored research outputs, overall score","code":""},{"path":"https://nicebread.github.io/RESQUER/reference/score_all_from_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Score all research outputs from a file — score_all_from_file","title":"Score all research outputs from a file — score_all_from_file","text":"Reads research outputs specified file scores using score_all. Returns list following elements: scores list scores research output scored_research_outputs number research outputs scored overall_score average score scored research outputs","code":""},{"path":"https://nicebread.github.io/RESQUER/reference/score_all_from_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Score all research outputs from a file — score_all_from_file","text":"","code":"score_all_from_file(file, verbose = FALSE)"},{"path":"https://nicebread.github.io/RESQUER/reference/score_all_from_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Score all research outputs from a file — score_all_from_file","text":"file file path research outputs stored. verbose Logical value indicating whether print additional information. Default FALSE.","code":""},{"path":"https://nicebread.github.io/RESQUER/reference/score_all_from_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Score all research outputs from a file — score_all_from_file","text":"list elements scores, scored_research_outputs, overall_score.","code":""},{"path":"https://nicebread.github.io/RESQUER/reference/score_all_from_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Score all research outputs from a file — score_all_from_file","text":"","code":"if (FALSE) { score_all_from_file(\"research_outputs.json\", verbose = TRUE) }"},{"path":"https://nicebread.github.io/RESQUER/reference/unCamel.html","id":null,"dir":"Reference","previous_headings":"","what":"For all cells in selected columns, replace CamelCase with spaces between words — unCamel","title":"For all cells in selected columns, replace CamelCase with spaces between words — unCamel","text":"cells selected columns, replace CamelCase spaces words","code":""},{"path":"https://nicebread.github.io/RESQUER/reference/unCamel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"For all cells in selected columns, replace CamelCase with spaces between words — unCamel","text":"","code":"unCamel(df, cname)"},{"path":"https://nicebread.github.io/RESQUER/reference/unCamel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"For all cells in selected columns, replace CamelCase with spaces between words — unCamel","text":"df data.frame cname Column names cells uncameled.","code":""},{"path":"https://nicebread.github.io/RESQUER/reference/unCamel0.html","id":null,"dir":"Reference","previous_headings":"","what":"Replaces CamelCase in a vector with spaces between words — unCamel0","title":"Replaces CamelCase in a vector with spaces between words — unCamel0","text":"Replaces CamelCase vector spaces words","code":""},{"path":"https://nicebread.github.io/RESQUER/reference/unCamel0.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replaces CamelCase in a vector with spaces between words — unCamel0","text":"","code":"unCamel0(x)"},{"path":"https://nicebread.github.io/RESQUER/reference/unCamel0.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replaces CamelCase in a vector with spaces between words — unCamel0","text":"x character vector uncameled.","code":""}]
